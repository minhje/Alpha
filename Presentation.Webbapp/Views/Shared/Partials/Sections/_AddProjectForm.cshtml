@model AddProjectViewModel

<div id="addProjectModal" class="modal">
    <div class="modal-content">

        <div class="modal-header">
            <h4>Add Project</h4>
            <button type="button" class="btn-close" data-close="true"></button>
        </div>

        <form asp-action="Add" asp-controller="Projects" method="post" novalidate>

            <div class="image-previewer"> 
                <img src="" class="image-preview" /> 
                <input asp-for="ProjectImage" accept="image/*" class="hide" /> 
        </div> 

            <div class="form-group"> 
                <label asp-for="ProjectName"></label> 
                 <div class="field-group"> 
                     <input asp-for="ProjectName" /> 
                     <span asp-validation-for="ProjectName"></span> 
                 </div> 
             </div>

             <div class="form-group"> 
                 <label asp-for="Client"></label> 
                 <div id="tagged-client" class="form-input form-tag-select">
                     <input type="text" id="client-search" class="form-tag-input" placeholder="Add client..." />
                     <label for="client-search" class="fa-solid fa-ellipsis"></label>
                     <div id="client-search-results" class="search-results"></div>
                     <input type="hidden" name="SelectedClientIds" id="SelectedClientIds" />
                    <span asp-validation-for="Client"></span>
                </div> 
             </div>

             <div class="form-group"> 
                 <label asp-for="Description"></label> 
                 <div class="field-group"> 
                   <input asp-for="Description" /> 
                     <span asp-validation-for="Description"></span> 
                 </div> 
             </div>

             <div class="form-horizontal-group">
             <div class="form-group"> 
                 <label asp-for="StartDate"></label> 
                 <div class="field-group"> 
                     <input asp-for="StartDate" /> 
                     <span asp-validation-for="StartDate"></span> 
                 </div> 
             </div>

                <div class="form-group">
                    <label asp-for="EndDate"></label> 
                 <div class="field-group"> 
                     <input asp-for="EndDate" /> 
                     <span asp-validation-for="EndDate"></span> 
                 </div> 
             </div> 
             </div>

           @*    <div class="form-group"> 
                 <label asp-for="Member"></label> 
                 <div class="field-group"> 
                     <input asp-for="Member" /> 
                     <span asp-validation-for="Member"></span> 
                 </div> 
                 </div> *@

                 <div class="form-group"> 
                     <label asp-for="Budget"></label> 
                     <div class="field-group"> 
                         <input asp-for="Budget" /> 
                         <span asp-validation-for="Budget"></span> 
                     </div>
                 </div>

            <button type="submit" class="btn btn-submit btn-blue">Create</button>
        </form>

    </div>
</div>

<script>
          document.addEventListener("DOMContentLoaded", () => {
        const clientSearchInput = document.getElementById('client-search');
        const clientSearchResults = document.getElementById('client-search-results');
        const selectedClientIds = document.getElementById('SelectedClientIds');

        if (clientSearchInput && clientSearchResults && selectedClientIds) {
            initTagSelector({
                containerId: 'tagged-client',
                inputId: 'client-search',
                resultsId: 'client-search-results',
                searchUrl: (query) => `/Clients/SearchClients?term=${encodeURIComponent(query)}`,
                displayProperty: 'clientName',
                tagClass: 'client-tag',
                emptyMessage: 'No clients found.',
                hiddenInputId: 'SelectedClientIds',
                preselected: [] // Pass preselected clients if any
            });
        } else {
            console.error("One or more required elements for initTagSelector are missing.");
        }
    });


     // const preSelectedClients = []

    //     initTagSelector({
    //         containerId: 'tagged-client',
    //         inputId: 'client-search',
    //         resultsId: 'client-search-results',
    //         searchUrl: (query) => '/Clients/SearchClients?term=' + encodeURIComponent(query),
    //         displayProperty: 'clientName',
    //         tagClass: 'client-tag',
    //         emptyMessage: 'No clients found.',
    //         hiddenInputId: 'SelectedClientIds',
    //         selectedInputIds: 'SelectedClientIds'
    // });
</script>
